name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Postgres in Docker
        run: |
          docker run -d \
            --name ci-postgres \
            -e POSTGRES_DB=$DB_NAME \
            -e POSTGRES_USER=$DB_USER \
            -e POSTGRES_PASSWORD=$DB_PASS \
            -p $DB_PORT:5432 \
            postgres:15

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; do
            echo "Waiting for Postgresâ€¦"
            sleep 5
          done

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Build & run tests
        working-directory: backend
        run: |
          mvn clean verify \
            -Dspring.datasource.url=jdbc:postgresql://$DB_HOST:$DB_PORT/$DB_NAME \
            -Dspring.datasource.username=$DB_USER \
            -Dspring.datasource.password=$DB_PASS

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/task-backend:${{ github.sha }} \
            -f backend/Dockerfile \
            backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task-backend:${{ github.sha }}

      - name: Build & push frontend image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/task-frontend:${{ github.sha }} \
            -f frontend/Dockerfile \
            frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task-frontend:${{ github.sha }}
