name: CI + Docker Publish

on:
  push:
    branches:
      - master

env:
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/task-backend:${{ github.sha }}
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/task-frontend:${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: tasks
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_HOST: db
      DB_PORT: '5432'
      DB_NAME: tasks
      DB_USER: user
      DB_PASS: pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build & test back end
        working-directory: backend
        run: mvn clean verify

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install and test front end
        working-directory: frontend
        run: |
          npm ci
          npm test

      - name: Build front end
        working-directory: frontend
        run: npm run build

  docker-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push back end image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

      - name: Build & push front end image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}
